# origin from ./rasm
#
# NEW: Create an sim65 executable
# 1. compile
# 2. filter errors and format for emacs to understand
# 3. generate .s-file to view
# 4. make an autostart copy
# NO: 5. "upload" it to assumed linked directory ORIC

# Usage: ./tap progname
#
# configure this by creating a ORIC link to your download/upload directory

OPTS=" -DPROGSIZE "

echo "unix> ./tap $*"

name=$1
shift

rm $name.map  2>/dev/null
rm $name.tap  2>/dev/null
rm $name.o    2>/dev/null
rm $name.s    2>/dev/null
rm fil

# TODO: ld65 -D __GRAB__=1 to grab graphics memory =>44K (37K)
# TODO: linker -D __AUTORUN__=$C7

( cl65 -C sim6502-rrasm.cfg -r -Oirs $* $OPTS '-D__AUTORUN__=$C7' -t sim6502 $name.c $name-asm.asm -o $name.sim -vm -m $name.map 2>&1 | sed 's/(\([0-9]\+\))/:\1/g' ) || (echo "??????????????? FAILED ???????????"; exit 72)

# generate .s file
echo "--gen .s--"
#rm $name.s
cc65 -r -Oirs $OPTS -T $name.c vm-asm.s 2>/dev/null
ls -g $name.s

echo "`./wcode $name.c ` LOC of $name  C-code (wc: `wc $name.c`"

#cl65 -vm -m $name.map $name.o

ls -g $name.o $name.tap

# make it autostart and copy to download directory

nam=$(basename $name)
echo "NAME: $nam"

# extract "sector" from tap file
perl -e '$_=join("",<>);s/^[\s\S]*BEFORE>//m;s/<AFTER[\s\S]*//m;print;' $nam.tap > $nam.bin

# generate listing w \hex
ca65 $name-asm.asm -l $name-asm.s 2>/dev/null 1>/dev/null
ca65 $name.s -l $name.lst 2>/dev/null 1>/dev/null

cat $name.sim | sed '1 s/^\(.......\)./\1\xc7/' > fil ; cp fil ORIC/$nam.tap ; hexdump -C $nam.tap | head -1 ; hexdump -C ORIC/$nam.tap | head -1 ; ls -g $name.tap $nam.bin ORIC/$nam.tap

./map $name

ls -l $name.*

clang oric-terminal.c -o oric-terminal || exit

# -- simulation
#echo "=== RUN ==="
#(time sim65 -c $name.sim "$@" ; echo "--- EXIT=$? ---") | tee ${name}.log

# with oric-terminal
#(sim65 -c $name.sim "$@" ; stty sane; echo "--- EXIT=$? ---") | tee $name.log | ./oric-terminal
# NO oric-terminal
(sim65 -c $name.sim "$@" ; stty sane; echo "--- EXIT=$? ---") | tee $name.log

echo
(echo "`grep ' cycles' $name.log | sed -e 's/ cycles//'` /1000/1000" | bc -l ; echo "seconds simulated time");

