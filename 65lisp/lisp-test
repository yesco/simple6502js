cat 150.words 150.words 150.words 150.words | ./run -q
echo "1 'foo 2 'bar 3 '|foo| 4 '|foo bar| 5" | ./run -t

./run -t $* <<HERE


; --- constants eval to themselves

nil
T
ERROR

"foo"
"bar"

; --- quote symbol

'foo
'bar


; --- simple number

0
42
-42

; --- decimal

1e5
1d5
+1d+5
-1d-5

1.23456789012345678d
1.23456789012345678e

; long int (keep 6 chars)
123456789012345678e
123456789012345678d


; --- list of atoms

'(1 2 (3 4) 5) (nil) (()) foo bar foobar foo foobar

'(a ab abc abcd abcde abcdef abcdefg abcdefgh abcdefghi)

'(foo . bar)
'(1 foo . 3)

; --- cons

(cons 3 4)
(cons 'foo 'bar)

(car (cons 3 4))
(cdr (cons 3 4))


; --- list

(list (+ 1  2) foo bar (* 3 4))
(length (list (+ 1  2) foo bar (* 3 4)))


; --- + * varargs

(* (+ 1 2) (+ 1 1 1 1) 2)


; --- quote

'(1 2 3 4)


; --- variables/setq

foo
fie
(setq fie 4711)
fie
foo


; --- lambdas eval to closures capuring static env

(lambda (n) (+ n n))
((lambda (n) (+ n n)) 3)


; --- fail
(de f (lambda (n) (+ n n)))
(f 3)


; --- eq

(eq nil nil)
(eq T T)
(eq ERROR ERROR)
(eq 0 0)
(eq 42 42)


; --- < > ?

(< 3 4)
(< 4 4)
(< 5 4)
(> 3 4)
(> 4 4)
(> 5 4)

(< 'foo 'bar)
(< 'bar 'foo)
(< 'foo 'foo)

(< 'foo 3)
(> 'foo 3)

; --- I/O

(princ "foo")(princ '(fie "fum"))(princ "fie")
(prin1 "foo")(prin1 '(fie "fum"))(prin1 "fie")
(print "foo")(print '(fie "fum"))(print "fie")

(read "foo")
(read "42")
(read "(a b b a)")
(read "'(1 2 3 4)")

; --- TODO: ?

HERE

# - read long list of 1000 numbers

echo "'(`perl -e 'for $i (1...1000) {print "$i "; }'`)"  | ./run | less
